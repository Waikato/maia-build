plugins {
  id 'org.jetbrains.kotlin.jvm'
  id 'org.jetbrains.kotlinx.benchmark'
  id 'org.jetbrains.kotlin.plugin.serialization'
  id 'maven-publish'
}

repositories {
  mavenCentral()
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.kotlin
    }
  }
}

// TODO: Inherit these from root project
ext {
  kotlinVersion = "1.8.21"
  kotlinCoroutinesVersion = "1.7.1"
  kotlinxBenchmarkVersion = "0.4.8"
}

sourceSets {
  main.kotlin.srcDirs = ['src']
  main.resources.srcDirs = ['resources']
  test.kotlin.srcDirs = ['test']
  test.resources.srcDirs = ['test-resources']
  benchmarks.kotlin.srcDirs = ['benchmarks']
  benchmarks.resources.srcDirs = ['benchmark-resources']
}

sourceSets.named("benchmarks") {
  dependencies {
    implementation("org.jetbrains.kotlinx:kotlinx-benchmark-runtime:$kotlinxBenchmarkVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-benchmark-runtime-jvm:$kotlinxBenchmarkVersion")

    implementation sourceSets.main.output + sourceSets.main.runtimeClasspath
    implementation "org.openjdk.jmh:jmh-generator-annprocess:1.21"
    implementation "org.openjdk.jmh:jmh-core:1.21"
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
  implementation "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"

  testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

  // TODO: Add utility functions for other kotlin libraries
  //       e.g. json, reflect
}


test {
  useJUnitPlatform()
}

benchmark {
  targets {
    register("benchmarks")
  }
}
